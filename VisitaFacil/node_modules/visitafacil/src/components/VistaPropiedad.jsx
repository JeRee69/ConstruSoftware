import React, { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import ReactDatePicker from "react-datepicker";
import "react-datepicker/dist/react-datepicker.css";

const VistaPropiedad = () => {
  const { id } = useParams();
  const [propiedad, setPropiedad] = useState(null);
  const [cargando, setCargando] = useState(true);
  const [error, setError] = useState(null);
  const [fechaVisita, setFechaVisita] = useState(null);

  useEffect(() => {
    fetch(`http://localhost:8080/propiedades/${id}`)
      .then((res) => {
        if (!res.ok) {
          throw new Error("Error al cargar la propiedad");
        }
        return res.json();
      })
      .then((data) => {
        setPropiedad(data);
        setCargando(false);
      })
      .catch((err) => {
        setError(err.message);
        setCargando(false);
      });
  }, [id]);

  if (cargando) return <p>Cargando propiedad...</p>;
  if (error) return <p style={{ color: "red" }}>{error}</p>;
  if (!propiedad) return <p>Propiedad no encontrada.</p>;

  return (
    <div style={{ maxWidth: "700px", margin: "auto", padding: "2rem" }}>
      <h1>{propiedad.titulo}</h1>
      <p>{propiedad.descripcion}</p>
      <p><strong>Precio:</strong> ${propiedad.precio}</p>
      <p><strong>Tipo:</strong> {propiedad.tipo}</p>
      <p><strong>UbicaciÃ³n:</strong> {propiedad.ubicacion}</p>
      <p><strong>Disponible:</strong> {propiedad.disponible ? "SÃ­" : "No"}</p>

      <div
        style={{
          display: "flex",
          gap: "1rem",
          marginTop: "1rem",
          flexWrap: "wrap",
          justifyContent: "center",
        }}
      >
        {propiedad.imagenes && propiedad.imagenes.length > 0 ? (
          propiedad.imagenes.map((url, index) => {
            const trimmedUrl = url.trim();
            const fullUrl = `http://localhost:8080${trimmedUrl}`;
            return (
              <img
                key={index}
                src={fullUrl}
                alt={`${propiedad.titulo} imagen ${index + 1}`}
                style={{
                  width: "300px",
                  height: "200px",
                  objectFit: "cover",
                  borderRadius: "8px",
                  boxShadow: "0 2px 8px rgba(0,0,0,0.1)",
                }}
                onError={(e) => {
                  e.target.src = "/imagen-no-disponible.png";
                }}
              />
            );
          })
        ) : (
          <p>No hay imÃ¡genes disponibles.</p>
        )}
      </div>

      {/* ðŸ“… Calendario para agendar visita */}
      <div style={{ marginTop: "2rem", textAlign: "center" }}>
        <h3>Agendar una visita</h3>
        <ReactDatePicker
          selected={fechaVisita}
          onChange={(date) => setFechaVisita(date)}
          minDate={new Date()}
          placeholderText="Selecciona una fecha"
          dateFormat="dd/MM/yyyy"
          inline
        />
      </div>
    </div>
  );
};

export default VistaPropiedad;
